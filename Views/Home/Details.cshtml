@model Veb_Projekat.Models.Arrangement
@using Veb_Projekat.Repositories
@using Veb_Projekat.Models.Enums

<h2>@Model.Name</h2>

<p><strong>Arrangement type:</strong> @Model.Type</p>
<p><strong>Transport:</strong> @Model.Transport</p>
<p><strong>Location:</strong> @Model.Location</p>
<p><strong>Start date:</strong> @Model.StartDate.ToString("dd/MM/yyyy")</p>
<p><strong>End date:</strong> @Model.EndDate.ToString("dd/MM/yyyy")</p>
<p><strong>Max passengers:</strong> @Model.MaxNumOfPassengers</p>
<p><strong>Description:</strong> @Model.Description</p>
<p><strong>Program:</strong> @Model.TravelProgram</p>

<h3>Accommodations</h3>

@if (Model.Accommodations != null && Model.Accommodations.Any())
{
    foreach (var acc in Model.Accommodations)
    {
        <div style="border:1px solid #ccc; padding:10px; margin-bottom:10px;">
            <h4>@acc.Name (@acc.Type)</h4>
            <p><strong>Stars:</strong> @acc.Stars</p>
            <p><strong>Pool:</strong> @(acc.HasPool ? "Yes" : "No")</p>
            <p><strong>Spa:</strong> @(acc.HasSpa ? "Yes" : "No")</p>
            <p><strong>Accessible:</strong> @(acc.Accessible ? "Yes" : "No")</p>
            <p><strong>Wifi:</strong> @(acc.HasWifi ? "Yes" : "No")</p>

            <h5>Filter & Sort Units</h5>

            @{
                string qMinGuests = Request.QueryString["minGuests_" + acc.Id];
                string qMaxGuests = Request.QueryString["maxGuests_" + acc.Id];
                string qPetsAllowed = Request.QueryString["petsAllowed_" + acc.Id];
                string qMaxPrice = Request.QueryString["maxPrice_" + acc.Id];
                string qUnitSortBy = Request.QueryString["unitSortBy_" + acc.Id];
                string qUnitSortDir = Request.QueryString["unitSortDir_" + acc.Id];
            }

            <form method="get" action="@Url.Action("Details", "Home")">
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="unitAccommodationId" value="@acc.Id" />

                <input type="hidden" name="accName" value="@Request.QueryString["accName"]" />
                <input type="hidden" name="accType" value="@Request.QueryString["accType"]" />
                <input type="hidden" name="hasPool" value="@Request.QueryString["hasPool"]" />
                <input type="hidden" name="hasSpa" value="@Request.QueryString["hasSpa"]" />
                <input type="hidden" name="accessible" value="@Request.QueryString["accessible"]" />
                <input type="hidden" name="hasWifi" value="@Request.QueryString["hasWifi"]" />
                <input type="hidden" name="accSortBy" value="@Request.QueryString["accSortBy"]" />
                <input type="hidden" name="accSortDir" value="@Request.QueryString["accSortDir"]" />

                <label>Min guests:</label>
                <input type="number" name="minGuests_@acc.Id" value="@qMinGuests" />

                <label>Max guests:</label>
                <input type="number" name="maxGuests_@acc.Id" value="@qMaxGuests" />

                <label>Pets allowed:</label>
                <select name="petsAllowed_@acc.Id">
                    <option value="">Any</option>
                    <option value="true" @(qPetsAllowed == "true" ? "selected" : "")>Yes</option>
                    <option value="false" @(qPetsAllowed == "false" ? "selected" : "")>No</option>
                </select>

                <label>Max price:</label>
                <input type="number" step="0.01" name="maxPrice_@acc.Id" value="@qMaxPrice" />

                <label>Sort by:</label>
                <select name="unitSortBy_@acc.Id">
                    <option value="">None</option>
                    <option value="MaxGuests" @(qUnitSortBy == "MaxGuests" ? "selected" : "")>Max Guests</option>
                    <option value="Price" @(qUnitSortBy == "Price" ? "selected" : "")>Price</option>
                </select>

                <select name="unitSortDir_@acc.Id">
                    <option value="asc" @(qUnitSortDir == "asc" ? "selected" : "")>Ascending</option>
                    <option value="desc" @(qUnitSortDir == "desc" ? "selected" : "")>Descending</option>
                </select>

                <button type="submit">Apply</button>
                <a href="@Url.Action("Details", "Home", new { id = Model.Id })">Reset</a>
            </form>


            <h5>Units</h5>
            @if (acc.Units != null && acc.Units.Any())
            {
                <table border="1" cellpadding="5">
                    <thead>
                        <tr>
                            <th>Unit ID</th>
                            <th>Max guests</th>
                            <th>Pets allowed</th>
                            <th>Price</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var unit in acc.Units)
                        {
                            var reservations = ReservationRepository.GetAll()
                                .Where(r => r.SelectedUnit.Id == unit.Id && r.Status == ReservationStatusEnum.Active)
                                .ToList();

                            bool isBooked = reservations.Any();

                            <tr style="background:@(isBooked ? "#f8d7da" : "#d4edda");">
                                <td>@unit.Id</td>
                                <td>@unit.MaxGuests</td>
                                <td>@(unit.PetsAllowed ? "Yes" : "No")</td>
                                <td>@unit.Price.ToString("C")</td>
                                <td>@(isBooked ? "Booked" : "Available")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No units available.</p>
            }

            <h5>Comments</h5>
            @{
                var comments = CommentRepository.GetAll()
                    .Where(c => c.Accommodation != null && c.Accommodation.Id == acc.Id)
                    .ToList();
            }
            @if (comments.Any())
            {
                <ul>
                    @foreach (var comment in comments)
                    {
                        <li>
                            <strong>@comment.Tourist.Username:</strong>
                            @comment.Text
                            (<strong>Rating:</strong> @comment.Rating/5)
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No comments for this accommodation.</p>
            }
        </div>
    }
}
else
{
    <p>No accommodations for this arrangement.</p>
}
