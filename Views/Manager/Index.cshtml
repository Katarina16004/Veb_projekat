@using Veb_Projekat.Models
@{
    ViewBag.Title = "Manager Dashboard";
    var arrangements = ViewBag.MyArrangements as List<Arrangement>;
}

<h2>Manager Dashboard</h2>

<p>Welcome, @(Session["CurrentUser"] as Veb_Projekat.Models.SessionUser).FirstName!</p>

@if (TempData["Success"] != null)
{
    <p><strong>Success:</strong> @TempData["Success"]</p>
}

@if (TempData["Error"] != null)
{
    <p><strong>Error:</strong> @TempData["Error"]</p>
}

<h3>Statistics</h3>
<ul>
    <li>Total Arrangements: @((int)ViewBag.TotalArrangements)</li>
    <li>Upcoming: @((int)ViewBag.UpcomingArrangements)</li>
    <li>Past: @((int)ViewBag.PastArrangements)</li>
</ul>

<h3>Quick Actions</h3>
<p>
    @Html.ActionLink("Create New Arrangement", "CreateArrangement") |
    @Html.ActionLink("View All Arrangements", "ViewAllArrangements") |
    @Html.ActionLink("View All Accommodations", "ViewAllAccommodations") |
    @Html.ActionLink("Approve Comments", "ApproveComments")
</p>

<h3>Recent Arrangements</h3>

@if (arrangements != null && arrangements.Any())
{
    var recentArrangements = arrangements.OrderByDescending(a => a.StartDate).Take(5);

    <table border="1">
        <tr>
            <th>Name</th>
            <th>Location</th>
            <th>Type</th>
            <th>Start Date</th>
            <th>Status</th>
            <th>Accommodations</th>
            <th>Actions</th>
        </tr>

        @foreach (var arrangement in recentArrangements)
        {
            bool isUpcoming = arrangement.StartDate > DateTime.Now;

            <tr>
                <td>
                    <strong>@arrangement.Name</strong><br />
                    <small>ID: @arrangement.Id</small>
                </td>
                <td>@arrangement.Location</td>
                <td>@arrangement.Type</td>
                <td>@arrangement.StartDate.ToString("dd/MM/yyyy")</td>
                <td>@(isUpcoming ? "Upcoming" : "Past")</td>
                <td>
                    @Html.ActionLink("Manage (" + arrangement.Accommodations.Count + ")", "ManageAccommodations", new { arrangementId = arrangement.Id })
                </td>
                <td>
                    @Html.ActionLink("View", "Details", "Home", new { id = arrangement.Id }, null)

                    @if (isUpcoming)
                    {
                        @Html.Raw(" | ")
                        @Html.ActionLink("Edit", "EditArrangement", new { id = arrangement.Id })
                        @Html.Raw(" | ")

                        using (Html.BeginForm("DeleteArrangement", "Manager", FormMethod.Post, new { style = "display:inline;" }))
                        {
                            <input type="hidden" name="id" value="@arrangement.Id" />
                            <input type="submit" value="Delete" onclick="return confirm('Are you sure you want to delete this arrangement?');" />
                        }
                    }
                </td>
            </tr>
        }
    </table>

    <p><em>Showing @recentArrangements.Count() of @arrangements.Count arrangement(s)</em></p>

    if (arrangements.Count > 5)
    {
        <p>@Html.ActionLink("View All Arrangements", "ViewAllArrangements")</p>
    }
}
else
{
    <p>No arrangements yet. @Html.ActionLink("Create your first arrangement", "CreateArrangement")!</p>
}