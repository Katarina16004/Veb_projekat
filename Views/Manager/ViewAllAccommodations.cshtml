@using Veb_Projekat.Models
@{
    ViewBag.Title = "All My Accommodations";
    var accommodations = ViewBag.MyAccommodations as List<Accommodation>;
}

<h2>All My Accommodations</h2>

@if (TempData["Success"] != null)
{
    <p style="color: green;"><strong>Success:</strong> @TempData["Success"]</p>
}

@if (TempData["Error"] != null)
{
    <p style="color: red;"><strong>Error:</strong> @TempData["Error"]</p>
}

<h3>Statistics</h3>
<ul>
    <li>Total Accommodations: @((int)ViewBag.TotalAccommodations)</li>
    <li>Active: @((int)ViewBag.ActiveAccommodations)</li>
    <li>Deleted: @((int)ViewBag.DeletedAccommodations)</li>
</ul>

<p>
    @Html.ActionLink("Back to Dashboard", "Index") |
    @Html.ActionLink("View Arrangements", "ViewAllArrangements")
</p>

@if (accommodations != null && accommodations.Any())
{
    <table border="1" style="width: 100%; border-collapse: collapse;">
        <tr style="background-color: #f0f0f0;">
            <th style="padding: 10px;">Name</th>
            <th style="padding: 10px;">Type</th>
            <th style="padding: 10px;">Stars</th>
            <th style="padding: 10px;">Features</th>
            <th style="padding: 10px;">Units</th>
            <th style="padding: 10px;">Status</th>
            <th style="padding: 10px;">Parent Arrangement</th>
            <th style="padding: 10px;">Actions</th>
        </tr>

        @foreach (var accommodation in accommodations)
        {
            var arrangements = Veb_Projekat.Repositories.ArrangementRepository.GetAllByManagerUsername(
                (Session["CurrentUser"] as Veb_Projekat.Models.SessionUser).Username);
            var parentArrangement = arrangements.FirstOrDefault(arr =>
                arr.Accommodations.Any(acc => acc.Id == accommodation.Id));

            <tr style="@(accommodation.IsDeleted ? "background-color: #ffeeee;" : "")">
                <td style="padding: 10px;">
                    <strong>@accommodation.Name</strong><br />
                    <small>ID: @accommodation.Id</small>
                    @if (accommodation.IsDeleted)
                    {
                        <br /><span style="color: red;">(DELETED)</span>
                    }
                </td>
                <td style="padding: 10px;">@accommodation.Type</td>
                <td style="padding: 10px;">
                    @if (accommodation.Type == Veb_Projekat.Models.Enums.AccommodationTypeEnum.Hotel)
                    {
                        for (int i = 0; i < accommodation.Stars; i++)
                        {
                            @Html.Raw("★")
                        }
                        <span>(@accommodation.Stars)</span>
                    }
                    else
                    {
                        <span>N/A</span>
                    }
                </td>
                <td style="padding: 10px;">
                    <div style="font-size: 12px;">
                        @if (accommodation.HasPool)
                        {<div>Pool</div>}
                        @if (accommodation.HasSpa)
                        {<div>Spa</div>}
                        @if (accommodation.Accessible)
                        {<div>Accessible</div>}
                        @if (accommodation.HasWifi)
                        {<div>WiFi</div>}
                        @if (!accommodation.HasPool && !accommodation.HasSpa && !accommodation.Accessible && !accommodation.HasWifi)
                        {
                            <span>None</span>
                        }
                    </div>
                </td>
                <td style="padding: 10px; text-align: center;">
                    <strong>@accommodation.Units.Count</strong>
                </td>
                <td style="padding: 10px;">
                    <span style="color: @(accommodation.IsDeleted ? "red" : "green");">
                        @(accommodation.IsDeleted ? "Deleted" : "Active")
                    </span>
                </td>
                <td style="padding: 10px;">
                    @if (parentArrangement != null)
                    {
                        @Html.ActionLink(parentArrangement.Name, "ManageAccommodations", new { arrangementId = parentArrangement.Id })
                        <br /><small>@parentArrangement.Location</small>
                    }
                    else
                    {
                        <span style="color: gray;">Unknown</span>
                    }
                </td>
                <td style="padding: 10px;">
                    @Html.ActionLink("Edit", "EditAccommodation", new { id = accommodation.Id })

                    @if (!accommodation.IsDeleted && parentArrangement != null)
                    {
                        @Html.Raw(" | ")
                        @Html.ActionLink("Manage", "ManageAccommodations", new { arrangementId = parentArrangement.Id })
                        @Html.Raw(" | ")

                        using (Html.BeginForm("DeleteAccommodation", "Manager", FormMethod.Post, new { style = "display:inline;" }))
                        {
                            <input type="hidden" name="id" value="@accommodation.Id" />
                            <input type="submit" value="Delete" onclick="return confirm('Are you sure you want to delete this accommodation?');"
                                   style="background-color: #ff4444; color: white; border: none; padding: 2px 8px;" />
                        }
                    }
                </td>
            </tr>
        }
    </table>
}
else
{
    <p>No accommodations found. Start by @Html.ActionLink("creating some arrangements", "CreateArrangement") first!</p>
}