@using Veb_Projekat.Models
@{
    ViewBag.Title = "All My Accommodations";
    var accommodations = ViewBag.MyAccommodations as List<Accommodation>;
}

<h2 style="margin:20px;">All My Accommodations</h2>

@if (TempData["Success"] != null)
{
    <p style="color: green;"><strong>Success:</strong> @TempData["Success"]</p>
}

@if (TempData["Error"] != null)
{
    <p style="color: red;"><strong>Error:</strong> @TempData["Error"]</p>
}

<div style="margin:20px;">
    <h3>Statistics</h3>
    <ul>
        <li>Total Accommodations: @((int)ViewBag.TotalAccommodations)</li>
        <li>Active: @((int)ViewBag.ActiveAccommodations)</li>
        <li>Deleted: @((int)ViewBag.DeletedAccommodations)</li>
    </ul>

</div>

<div style="margin:20px;">
    <h3>Filter & Sort Accommodations</h3>

    <form class="filter-form" method="get" action="@Url.Action("ViewAllAccommodations", "Manager")">
        <div class="filters-row">
            <div>
                <label>Name:</label>
                <input type="text" name="accName" value="@ViewBag.SelectedName" />
            </div>
            <div>
                <label>Type:</label>
                <select name="accType">
                    <option value="">All types</option>
                    @foreach (var t in Enum.GetValues(typeof(Veb_Projekat.Models.Enums.AccommodationTypeEnum)))
                    {
                        <option value="@t" @(ViewBag.SelectedType == t.ToString() ? "selected" : "")>@t</option>
                    }
                </select>
            </div>

            <div>
                <label>Pool:</label>
                <select name="hasPool">
                    <option value="">Any</option>
                    <option value="true" @(ViewBag.HasPool == true ? "selected" : "")>Yes</option>
                    <option value="false" @(ViewBag.HasPool == false ? "selected" : "")>No</option>
                </select>
            </div>

            <div>
                <label>Spa:</label>
                <select name="hasSpa">
                    <option value="">Any</option>
                    <option value="true" @(ViewBag.HasSpa == true ? "selected" : "")>Yes</option>
                    <option value="false" @(ViewBag.HasSpa == false ? "selected" : "")>No</option>
                </select>
            </div>

            <div>
                <label>Accessible:</label>
                <select name="accessible">
                    <option value="">Any</option>
                    <option value="true" @(ViewBag.Accessible == true ? "selected" : "")>Yes</option>
                    <option value="false" @(ViewBag.Accessible == false ? "selected" : "")>No</option>
                </select>
            </div>

            <div>
                <label>WiFi:</label>
                <select name="hasWifi">
                    <option value="">Any</option>
                    <option value="true" @(ViewBag.HasWifi == true ? "selected" : "")>Yes</option>
                    <option value="false" @(ViewBag.HasWifi == false ? "selected" : "")>No</option>
                </select>
            </div>

            <div>
                <label>Sort by:</label>
                <select name="accSortBy">
                    <option value="">None</option>
                    <option value="Name" @(ViewBag.SortBy == "Name" ? "selected" : "")>Name</option>
                    <option value="TotalUnits" @(ViewBag.SortBy == "TotalUnits" ? "selected" : "")>Total Units</option>
                    <option value="AvailableUnits" @(ViewBag.SortBy == "AvailableUnits" ? "selected" : "")>Available Units</option>
                </select>
            </div>

            <div>
                <label>Order:</label>
                <select name="accSortDir">
                    <option value="asc" @(ViewBag.SortDir == "asc" ? "selected" : "")>Ascending</option>
                    <option value="desc" @(ViewBag.SortDir == "desc" ? "selected" : "")>Descending</option>
                </select>
            </div>

            <div class="btn-container">
                <button type="submit">Apply</button>
                <a href="@Url.Action("ViewAllAccommodations", "Manager")">Reset</a>
            </div>
        </div>
    </form>
</div>


<p style="margin:20px;">
    @Html.ActionLink("Back to Home", "Index")
</p>

<div style="margin:20px;">
    @if (accommodations != null && accommodations.Any())
    {
        <table border="1" cellpadding="5">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Stars</th>
                    <th>Features</th>
                    <th>Total Units</th>
                    <th>Available Units</th>
                    <th>Status</th>
                    <th>Parent Arrangement</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var accommodation in accommodations)
                {
                    var arrangements = Veb_Projekat.Repositories.ArrangementRepository.GetAllByManagerUsername(
                        (Session["CurrentUser"] as Veb_Projekat.Models.SessionUser).Username);
                    var parentArrangement = arrangements.FirstOrDefault(arr =>
                        arr.Accommodations.Any(acc => acc.Id == accommodation.Id));

                    var reservations = Veb_Projekat.Repositories.ReservationRepository.GetAll();
                    var availableUnits = accommodation.Units.Count(u =>
                        !reservations.Any(r => r.SelectedUnit.Id == u.Id &&
                                               r.Status == Veb_Projekat.Models.Enums.ReservationStatusEnum.Active));

                    <tr style="background:@(accommodation.IsDeleted ? "#f8d7da" : "#d4edda");">
                        <td>
                            <strong>@accommodation.Name</strong>
                            @if (accommodation.IsDeleted)
                            {
                                <br /><small>(DELETED)</small>
                            }
                        </td>
                        <td>@accommodation.Type</td>
                        <td>
                            @if (accommodation.Type == Veb_Projekat.Models.Enums.AccommodationTypeEnum.Hotel)
                            {
                                for (int i = 0; i < accommodation.Stars; i++)
                                {
                                    @Html.Raw("★")
                                }
                                <span>(@accommodation.Stars)</span>
                            }
                            else
                            {
                                <span>N/A</span>
                            }
                        </td>
                        <td>
                            @if (accommodation.HasPool)
                            {<span>Pool </span>}
                            @if (accommodation.HasSpa)
                            {<span>Spa </span>}
                            @if (accommodation.Accessible)
                            {<span>Accessible </span>}
                            @if (accommodation.HasWifi)
                            {<span>WiFi</span>}
                            @if (!accommodation.HasPool && !accommodation.HasSpa && !accommodation.Accessible && !accommodation.HasWifi)
                            {
                                <span>None</span>
                            }
                        </td>
                        <td><strong>@accommodation.Units.Count</strong></td>
                        <td><strong>@availableUnits</strong></td>
                        <td>
                            @if (accommodation.IsDeleted)
                            {
                                <strong>Deleted</strong>
                            }
                            else
                            {
                                <strong>Active</strong>
                            }
                        </td>
                        <td>
                            @if (parentArrangement != null)
                            {
                                <p>@parentArrangement.Name</p>
                                <br /><small>@parentArrangement.Location</small>
                            }
                            else
                            {
                                <span>Unknown</span>
                            }
                        </td>
                        <td>

                            @if (!accommodation.IsDeleted && parentArrangement != null)
                            {
                                @Html.ActionLink("Manage", "ManageAccommodations", new { arrangementId = parentArrangement.Id })
                              
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No accommodations found. Start by @Html.ActionLink("creating some arrangements", "CreateArrangement") first!</p>
    }
</div>
